# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/eos/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# ------------------------------------------------------------
# Basic variables
# ------------------------------------------------------------



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/o2scl
pkgincludedir = $(includedir)/o2scl
pkglibdir = $(libdir)/o2scl
pkglibexecdir = $(libexecdir)/o2scl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin13.3.0
host_triplet = x86_64-apple-darwin13.3.0
check_PROGRAMS = eos_had_apr_ts$(EXEEXT) eos_quark_bag_ts$(EXEEXT) \
	nucmass_ldrop_ts$(EXEEXT) nstar_cold_ts$(EXEEXT) \
	eos_base_ts$(EXEEXT) eos_had_potential_ts$(EXEEXT) \
	eos_had_sym4_ts$(EXEEXT) eos_had_base_ts$(EXEEXT) \
	eos_quark_njl_ts$(EXEEXT) eos_quark_ts$(EXEEXT) \
	eos_had_rmf_ts$(EXEEXT) eos_had_schematic_ts$(EXEEXT) \
	eos_had_skyrme_ts$(EXEEXT) eos_tov_ts$(EXEEXT) \
	tov_solve_ts$(EXEEXT) eos_quark_cfl6_ts$(EXEEXT) \
	eos_had_tabulated_ts$(EXEEXT) eos_nse_ts$(EXEEXT) \
	eos_had_rmf_delta_ts$(EXEEXT) eos_crust_ts$(EXEEXT) \
	eos_had_ddc_ts$(EXEEXT) eos_quark_cfl_ts$(EXEEXT) \
	nucleus_rmf_ts$(EXEEXT) nucmass_ldrop_shell_ts$(EXEEXT) \
	eos_had_gogny_ts$(EXEEXT) eos_crust_virial_ts$(EXEEXT)
subdir = src/eos
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(am__pkginclude_HEADERS_DIST)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libo2scl_eos_la_LIBADD =
#am__objects_1 = eos_had_apr.lo eos_quark_bag.lo \
#	eos_quark_cfl.lo eos_quark_cfl6.lo \
#	eos_crust.lo nstar_cold.lo eos_base.lo \
#	eos_had_potential.lo eos_quark_njl.lo \
#	eos_had_ddc.lo nucmass_ldrop.lo eos_quark.lo \
#	eos_had_rmf.lo eos_had_schematic.lo \
#	eos_had_skyrme.lo tov_solve.lo eos_nse.lo \
#	eos_had_rmf_delta.lo eos_tov.lo \
#	eos_had_sym4.lo eos_had_base.lo eos_sn.lo \
#	nucmass_ldrop_shell.lo eos_had_hlps.lo
am__objects_1 = eos_had_apr.lo eos_quark_bag.lo \
	eos_crust.lo nstar_cold.lo eos_base.lo \
	eos_had_potential.lo eos_quark_njl.lo \
	eos_had_ddc.lo nucmass_ldrop.lo eos_quark.lo \
	eos_had_rmf.lo eos_had_schematic.lo \
	eos_had_skyrme.lo tov_solve.lo eos_nse.lo \
	hdf_eos_io.lo eos_had_rmf_delta.lo eos_tov.lo \
	eos_had_sym4.lo eos_had_base.lo nucleus_rmf.lo \
	eos_sn.lo nucmass_ldrop_shell.lo \
	eos_quark_cfl.lo eos_quark_cfl6.lo \
	eos_had_hlps.lo
am_libo2scl_eos_la_OBJECTS = $(am__objects_1)
libo2scl_eos_la_OBJECTS = $(am_libo2scl_eos_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libo2scl_eos_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libo2scl_eos_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_eos_base_ts_OBJECTS = eos_base_ts.$(OBJEXT)
eos_base_ts_OBJECTS = $(am_eos_base_ts_OBJECTS)
eos_base_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_crust_ts_OBJECTS = eos_crust_ts.$(OBJEXT)
eos_crust_ts_OBJECTS = $(am_eos_crust_ts_OBJECTS)
eos_crust_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_crust_virial_ts_OBJECTS = eos_crust_virial_ts.$(OBJEXT)
eos_crust_virial_ts_OBJECTS = $(am_eos_crust_virial_ts_OBJECTS)
eos_crust_virial_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_apr_ts_OBJECTS = eos_had_apr_ts.$(OBJEXT)
eos_had_apr_ts_OBJECTS = $(am_eos_had_apr_ts_OBJECTS)
eos_had_apr_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_base_ts_OBJECTS = eos_had_base_ts.$(OBJEXT)
eos_had_base_ts_OBJECTS = $(am_eos_had_base_ts_OBJECTS)
eos_had_base_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_ddc_ts_OBJECTS = eos_had_ddc_ts.$(OBJEXT)
eos_had_ddc_ts_OBJECTS = $(am_eos_had_ddc_ts_OBJECTS)
eos_had_ddc_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_gogny_ts_OBJECTS = eos_had_gogny_ts.$(OBJEXT)
eos_had_gogny_ts_OBJECTS = $(am_eos_had_gogny_ts_OBJECTS)
eos_had_gogny_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_potential_ts_OBJECTS = eos_had_potential_ts.$(OBJEXT)
eos_had_potential_ts_OBJECTS = $(am_eos_had_potential_ts_OBJECTS)
eos_had_potential_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_rmf_delta_ts_OBJECTS = eos_had_rmf_delta_ts.$(OBJEXT)
eos_had_rmf_delta_ts_OBJECTS = $(am_eos_had_rmf_delta_ts_OBJECTS)
eos_had_rmf_delta_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_rmf_ts_OBJECTS = eos_had_rmf_ts.$(OBJEXT)
eos_had_rmf_ts_OBJECTS = $(am_eos_had_rmf_ts_OBJECTS)
eos_had_rmf_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_schematic_ts_OBJECTS = eos_had_schematic_ts.$(OBJEXT)
eos_had_schematic_ts_OBJECTS = $(am_eos_had_schematic_ts_OBJECTS)
eos_had_schematic_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_skyrme_ts_OBJECTS = eos_had_skyrme_ts.$(OBJEXT)
eos_had_skyrme_ts_OBJECTS = $(am_eos_had_skyrme_ts_OBJECTS)
eos_had_skyrme_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_sym4_ts_OBJECTS = eos_had_sym4_ts.$(OBJEXT)
eos_had_sym4_ts_OBJECTS = $(am_eos_had_sym4_ts_OBJECTS)
eos_had_sym4_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_had_tabulated_ts_OBJECTS = eos_had_tabulated_ts.$(OBJEXT)
eos_had_tabulated_ts_OBJECTS = $(am_eos_had_tabulated_ts_OBJECTS)
eos_had_tabulated_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_nse_ts_OBJECTS = eos_nse_ts.$(OBJEXT)
eos_nse_ts_OBJECTS = $(am_eos_nse_ts_OBJECTS)
eos_nse_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_quark_bag_ts_OBJECTS = eos_quark_bag_ts.$(OBJEXT)
eos_quark_bag_ts_OBJECTS = $(am_eos_quark_bag_ts_OBJECTS)
eos_quark_bag_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_quark_cfl6_ts_OBJECTS = eos_quark_cfl6_ts.$(OBJEXT)
eos_quark_cfl6_ts_OBJECTS = $(am_eos_quark_cfl6_ts_OBJECTS)
eos_quark_cfl6_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_quark_cfl_ts_OBJECTS = eos_quark_cfl_ts.$(OBJEXT)
eos_quark_cfl_ts_OBJECTS = $(am_eos_quark_cfl_ts_OBJECTS)
eos_quark_cfl_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_quark_njl_ts_OBJECTS = eos_quark_njl_ts.$(OBJEXT)
eos_quark_njl_ts_OBJECTS = $(am_eos_quark_njl_ts_OBJECTS)
eos_quark_njl_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_quark_ts_OBJECTS = eos_quark_ts.$(OBJEXT)
eos_quark_ts_OBJECTS = $(am_eos_quark_ts_OBJECTS)
eos_quark_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_eos_tov_ts_OBJECTS = eos_tov_ts.$(OBJEXT)
eos_tov_ts_OBJECTS = $(am_eos_tov_ts_OBJECTS)
eos_tov_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_nstar_cold_ts_OBJECTS = nstar_cold_ts.$(OBJEXT)
nstar_cold_ts_OBJECTS = $(am_nstar_cold_ts_OBJECTS)
nstar_cold_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_nucleus_rmf_ts_OBJECTS = nucleus_rmf_ts.$(OBJEXT)
nucleus_rmf_ts_OBJECTS = $(am_nucleus_rmf_ts_OBJECTS)
nucleus_rmf_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_nucmass_ldrop_shell_ts_OBJECTS = nucmass_ldrop_shell_ts.$(OBJEXT)
nucmass_ldrop_shell_ts_OBJECTS = $(am_nucmass_ldrop_shell_ts_OBJECTS)
nucmass_ldrop_shell_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_nucmass_ldrop_ts_OBJECTS = nucmass_ldrop_ts.$(OBJEXT)
nucmass_ldrop_ts_OBJECTS = $(am_nucmass_ldrop_ts_OBJECTS)
nucmass_ldrop_ts_DEPENDENCIES = $(VCHECK_LIBS)
am_tov_solve_ts_OBJECTS = tov_solve_ts.$(OBJEXT)
tov_solve_ts_OBJECTS = $(am_tov_solve_ts_OBJECTS)
tov_solve_ts_DEPENDENCIES = $(VCHECK_LIBS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libo2scl_eos_la_SOURCES) $(eos_base_ts_SOURCES) \
	$(eos_crust_ts_SOURCES) $(eos_crust_virial_ts_SOURCES) \
	$(eos_had_apr_ts_SOURCES) $(eos_had_base_ts_SOURCES) \
	$(eos_had_ddc_ts_SOURCES) $(eos_had_gogny_ts_SOURCES) \
	$(eos_had_potential_ts_SOURCES) \
	$(eos_had_rmf_delta_ts_SOURCES) $(eos_had_rmf_ts_SOURCES) \
	$(eos_had_schematic_ts_SOURCES) $(eos_had_skyrme_ts_SOURCES) \
	$(eos_had_sym4_ts_SOURCES) $(eos_had_tabulated_ts_SOURCES) \
	$(eos_nse_ts_SOURCES) $(eos_quark_bag_ts_SOURCES) \
	$(eos_quark_cfl6_ts_SOURCES) $(eos_quark_cfl_ts_SOURCES) \
	$(eos_quark_njl_ts_SOURCES) $(eos_quark_ts_SOURCES) \
	$(eos_tov_ts_SOURCES) $(nstar_cold_ts_SOURCES) \
	$(nucleus_rmf_ts_SOURCES) $(nucmass_ldrop_shell_ts_SOURCES) \
	$(nucmass_ldrop_ts_SOURCES) $(tov_solve_ts_SOURCES)
DIST_SOURCES = $(am__libo2scl_eos_la_SOURCES_DIST) \
	$(eos_base_ts_SOURCES) $(eos_crust_ts_SOURCES) \
	$(eos_crust_virial_ts_SOURCES) $(eos_had_apr_ts_SOURCES) \
	$(eos_had_base_ts_SOURCES) $(eos_had_ddc_ts_SOURCES) \
	$(eos_had_gogny_ts_SOURCES) $(eos_had_potential_ts_SOURCES) \
	$(eos_had_rmf_delta_ts_SOURCES) $(eos_had_rmf_ts_SOURCES) \
	$(eos_had_schematic_ts_SOURCES) $(eos_had_skyrme_ts_SOURCES) \
	$(eos_had_sym4_ts_SOURCES) $(eos_had_tabulated_ts_SOURCES) \
	$(eos_nse_ts_SOURCES) $(eos_quark_bag_ts_SOURCES) \
	$(eos_quark_cfl6_ts_SOURCES) $(eos_quark_cfl_ts_SOURCES) \
	$(eos_quark_njl_ts_SOURCES) $(eos_quark_ts_SOURCES) \
	$(eos_tov_ts_SOURCES) $(nstar_cold_ts_SOURCES) \
	$(nucleus_rmf_ts_SOURCES) $(nucmass_ldrop_shell_ts_SOURCES) \
	$(nucmass_ldrop_ts_SOURCES) $(tov_solve_ts_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/Kyle/local/src/o2scl-0.916/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /Users/Kyle/local/src/o2scl-0.916/missing autoconf
AUTOHEADER = ${SHELL} /Users/Kyle/local/src/o2scl-0.916/missing autoheader
AUTOMAKE = ${SHELL} /Users/Kyle/local/src/o2scl-0.916/missing automake-1.14
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -I ~/local/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /opt/local/bin/ld
LDFLAGS = -L /Users/Kyle/local/lib
LIBOBJS = 
LIBS = -lgsl -lcblas 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/Kyle/local/src/o2scl-0.916/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../.././install-sh -c -d
NM = /opt/local/bin/nm
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OLIB_LT_VERSION = 6:0:6
OTOOL = otool
OTOOL64 = :
PACKAGE = o2scl
PACKAGE_BUGREPORT = awsteiner@users.sourceforge.net
PACKAGE_NAME = o2scl
PACKAGE_STRING = o2scl 0.916
PACKAGE_TARNAME = o2scl
PACKAGE_URL = 
PACKAGE_VERSION = 0.916
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.916
abs_builddir = /Users/Kyle/local/src/o2scl-0.916/src/eos
abs_srcdir = /Users/Kyle/local/src/o2scl-0.916/src/eos
abs_top_builddir = /Users/Kyle/local/src/o2scl-0.916
abs_top_srcdir = /Users/Kyle/local/src/o2scl-0.916
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin13.3.0
build_alias = 
build_cpu = x86_64
build_os = darwin13.3.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin13.3.0
host_alias = 
host_cpu = x86_64
host_os = darwin13.3.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/Kyle/local/src/o2scl-0.916/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/Kyle/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
#EOS_SRCS = eos_had_apr.cpp eos_quark_bag.cpp eos_quark_cfl.cpp \
#	eos_quark_cfl6.cpp \
#	eos_crust.cpp nstar_cold.cpp eos_base.cpp eos_had_potential.cpp \
#	eos_quark_njl.cpp eos_had_ddc.cpp nucmass_ldrop.cpp \
#	eos_quark.cpp eos_had_rmf.cpp eos_had_schematic.cpp \
#	eos_had_skyrme.cpp tov_solve.cpp eos_nse.cpp \
#	eos_had_rmf_delta.cpp eos_tov.cpp eos_had_sym4.cpp \
#	eos_had_base.cpp \
#	eos_sn.cpp nucmass_ldrop_shell.cpp eos_had_hlps.cpp


# 5/19/11, AWS: Even though currently O2scl_eos requires HDF support,
# we leave this HDF conditional here, in case future versions of
# the EOS library will allow one to disable HDF support
EOS_SRCS = eos_had_apr.cpp eos_quark_bag.cpp \
	eos_crust.cpp nstar_cold.cpp eos_base.cpp eos_had_potential.cpp \
	eos_quark_njl.cpp eos_had_ddc.cpp nucmass_ldrop.cpp \
	eos_quark.cpp eos_had_rmf.cpp eos_had_schematic.cpp \
	eos_had_skyrme.cpp tov_solve.cpp eos_nse.cpp hdf_eos_io.cpp \
	eos_had_rmf_delta.cpp eos_tov.cpp eos_had_sym4.cpp \
	eos_had_base.cpp nucleus_rmf.cpp eos_sn.cpp \
	nucmass_ldrop_shell.cpp eos_quark_cfl.cpp eos_quark_cfl6.cpp \
	eos_had_hlps.cpp

#HEADER_VAR = eos_had_apr.h eos_quark_bag.h eos_crust.h eos_had_ddc.h \
#	nstar_cold.h eos_base.h eos_had_potential.h nucmass_ldrop.h \
#	eos_quark_njl.h eos_quark.h eos_had_rmf.h eos_quark_cfl.h \
#	eos_quark_cfl6.h eos_had_schematic.h eos_had_skyrme.h \
#	eos_had_tabulated.h eos_nse.h tov_solve.h eos_had_rmf_delta.h \
#	eos_had_sym4.h eos_tov.h eos_had_base.h \
#	eos_sn.h nucmass_ldrop_shell.h eos_had_gogny.h \
#	eos_crust_virial.h eos_had_hlps.h

HEADER_VAR = eos_had_apr.h eos_quark_bag.h eos_crust.h eos_had_ddc.h \
	nstar_cold.h eos_base.h eos_had_potential.h nucmass_ldrop.h \
	eos_quark_njl.h eos_quark.h eos_had_rmf.h eos_quark_cfl.h \
	eos_quark_cfl6.h eos_had_schematic.h eos_had_skyrme.h \
	eos_had_tabulated.h eos_nse.h tov_solve.h eos_had_rmf_delta.h \
	eos_had_sym4.h eos_tov.h eos_had_base.h \
	hdf_eos_io.h nucleus_rmf.h eos_sn.h nucmass_ldrop_shell.h \
	eos_had_gogny.h eos_crust_virial.h eos_had_hlps.h

#TEST_VAR = eos_had_apr.scr eos_quark_bag.scr eos_crust_virial.scr \
#	nstar_cold.scr eos_base.scr eos_had_potential.scr \
#	eos_had_sym4.scr \
#	eos_quark_njl.scr eos_quark.scr eos_had_gogny.scr \
#	eos_had_rmf.scr eos_had_schematic.scr eos_had_skyrme.scr eos_tov.scr \
#	tov_solve.scr eos_quark_cfl6.scr eos_had_tabulated.scr eos_nse.scr \
#	eos_had_rmf_delta.scr eos_crust.scr eos_had_ddc.scr eos_quark_cfl.scr \
#	eos_had_base.scr eos_sn.scr nucmass_ldrop_shell.scr 

TEST_VAR = eos_had_apr.scr eos_quark_bag.scr nstar_cold.scr \
	eos_base.scr eos_had_potential.scr eos_had_sym4.scr \
	eos_quark_njl.scr eos_quark.scr nucmass_ldrop.scr \
	eos_had_rmf.scr eos_had_schematic.scr eos_had_skyrme.scr eos_tov.scr \
	eos_had_tabulated.scr eos_nse.scr eos_had_rmf_delta.scr \
	eos_crust.scr eos_had_ddc.scr eos_had_base.scr nucleus_rmf.scr \
	eos_crust_virial.scr eos_had_gogny.scr tov_solve.scr \
	eos_quark_cfl6.scr eos_quark_cfl.scr nucmass_ldrop_shell.scr 

#O2SCL_PART_MVAR = 

# ------------------------------------------------------------
# Includes
# ------------------------------------------------------------
O2SCL_PART_MVAR = -DO2SCL_PART
#O2SCL_EOS_MVAR = 
O2SCL_EOS_MVAR = -DO2SCL_EOS
#O2SCL_HDF_MVAR = 
O2SCL_HDF_MVAR = -DO2SCL_HDF
O2SCL_OPENMP_MVAR = 
#O2SCL_OPENMP_MVAR = -DO2SCL_OPENMP -fopenmp
O2SCL_EIGEN_MVAR = 
#O2SCL_EIGEN_MVAR = -DO2SCL_EIGEN
O2SCL_ARMA_MVAR = 
#O2SCL_ARMA_MVAR = -DO2SCL_ARMA
#O2SCL_CPP11_MVAR = -DO2SCL_NO_CPP11
O2SCL_CPP11_MVAR = 
AM_CPPFLAGS = -I../../include/ -DO2SCL_DATA_DIR=\"${datadir}/o2scl/\" \
	$(O2SCL_PART_MVAR) $(O2SCL_EOS_MVAR) $(O2SCL_HDF_MVAR) \
	$(O2SCL_OPENMP_MVAR) $(O2SCL_EIGEN_MVAR) $(O2SCL_ARMA_MVAR) \
	$(O2SCL_CPP11_MVAR) -DO2SCL_COND_FLAG


# ------------------------------------------------------------
# Install headers
# ------------------------------------------------------------
am__pkginclude_HEADERS_DIST = $(HEADER_VAR)
pkginclude_HEADERS = $(HEADER_VAR)
#VCHECK_LIBS = $(libdir)/libo2scl_eos.la $(libdir)/libo2scl_part.la \
#	$(libdir)/libo2scl.la 

# eos_sn_ts 
VCHECK_LIBS = $(libdir)/libo2scl_eos.la $(libdir)/libo2scl_part.la \
	$(libdir)/libo2scl_hdf.la $(libdir)/libo2scl.la 

eos_had_apr_ts_LDADD = $(VCHECK_LIBS)
eos_quark_bag_ts_LDADD = $(VCHECK_LIBS)
nstar_cold_ts_LDADD = $(VCHECK_LIBS)
nucmass_ldrop_ts_LDADD = $(VCHECK_LIBS)
nucmass_ldrop_shell_ts_LDADD = $(VCHECK_LIBS)
eos_base_ts_LDADD = $(VCHECK_LIBS)
eos_had_potential_ts_LDADD = $(VCHECK_LIBS)
eos_had_sym4_ts_LDADD = $(VCHECK_LIBS)
eos_had_base_ts_LDADD = $(VCHECK_LIBS)
eos_quark_njl_ts_LDADD = $(VCHECK_LIBS)
eos_quark_ts_LDADD = $(VCHECK_LIBS)
eos_had_rmf_ts_LDADD = $(VCHECK_LIBS)
eos_had_schematic_ts_LDADD = $(VCHECK_LIBS)
eos_had_skyrme_ts_LDADD = $(VCHECK_LIBS)
eos_tov_ts_LDADD = $(VCHECK_LIBS)
tov_solve_ts_LDADD = $(VCHECK_LIBS)
eos_quark_cfl6_ts_LDADD = $(VCHECK_LIBS)
eos_had_tabulated_ts_LDADD = $(VCHECK_LIBS)
eos_had_rmf_delta_ts_LDADD = $(VCHECK_LIBS)
eos_crust_ts_LDADD = $(VCHECK_LIBS)
eos_had_ddc_ts_LDADD = $(VCHECK_LIBS)
eos_quark_cfl_ts_LDADD = $(VCHECK_LIBS)
eos_nse_ts_LDADD = $(VCHECK_LIBS)
# eos_sn_ts_LDADD = $(VCHECK_LIBS)
nucleus_rmf_ts_LDADD = $(VCHECK_LIBS)
eos_had_gogny_ts_LDADD = $(VCHECK_LIBS)
eos_crust_virial_ts_LDADD = $(VCHECK_LIBS)
eos_had_apr_ts_SOURCES = eos_had_apr_ts.cpp
eos_quark_bag_ts_SOURCES = eos_quark_bag_ts.cpp
nstar_cold_ts_SOURCES = nstar_cold_ts.cpp
nucmass_ldrop_ts_SOURCES = nucmass_ldrop_ts.cpp
nucmass_ldrop_shell_ts_SOURCES = nucmass_ldrop_shell_ts.cpp
eos_base_ts_SOURCES = eos_base_ts.cpp
eos_had_potential_ts_SOURCES = eos_had_potential_ts.cpp
eos_had_sym4_ts_SOURCES = eos_had_sym4_ts.cpp
eos_had_base_ts_SOURCES = eos_had_base_ts.cpp
eos_quark_njl_ts_SOURCES = eos_quark_njl_ts.cpp
eos_quark_ts_SOURCES = eos_quark_ts.cpp
eos_had_rmf_ts_SOURCES = eos_had_rmf_ts.cpp
eos_had_schematic_ts_SOURCES = eos_had_schematic_ts.cpp
eos_had_skyrme_ts_SOURCES = eos_had_skyrme_ts.cpp
eos_tov_ts_SOURCES = eos_tov_ts.cpp
tov_solve_ts_SOURCES = tov_solve_ts.cpp
eos_quark_cfl6_ts_SOURCES = eos_quark_cfl6_ts.cpp
eos_had_tabulated_ts_SOURCES = eos_had_tabulated_ts.cpp
eos_had_rmf_delta_ts_SOURCES = eos_had_rmf_delta_ts.cpp
eos_crust_ts_SOURCES = eos_crust_ts.cpp
eos_had_ddc_ts_SOURCES = eos_had_ddc_ts.cpp
eos_quark_cfl_ts_SOURCES = eos_quark_cfl_ts.cpp
eos_nse_ts_SOURCES = eos_nse_ts.cpp
# eos_sn_ts_SOURCES = eos_sn_ts.cpp
nucleus_rmf_ts_SOURCES = nucleus_rmf_ts.cpp
eos_had_gogny_ts_SOURCES = eos_had_gogny_ts.cpp
eos_crust_virial_ts_SOURCES = eos_crust_virial_ts.cpp

# ------------------------------------------------------------
# Library o2scl_eos
# ------------------------------------------------------------
lib_LTLIBRARIES = libo2scl_eos.la
libo2scl_eos_la_SOURCES = $(EOS_SRCS)
libo2scl_eos_la_LDFLAGS = -version-info $(OLIB_LT_VERSION)
am__libo2scl_eos_la_SOURCES_DIST = $(EOS_SRCS)

# ------------------------------------------------------------
# Misc
# ------------------------------------------------------------
EXTRA_DIST = *_ts.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/eos/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/eos/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libo2scl_eos.la: $(libo2scl_eos_la_OBJECTS) $(libo2scl_eos_la_DEPENDENCIES) $(EXTRA_libo2scl_eos_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libo2scl_eos_la_LINK) -rpath $(libdir) $(libo2scl_eos_la_OBJECTS) $(libo2scl_eos_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

eos_base_ts$(EXEEXT): $(eos_base_ts_OBJECTS) $(eos_base_ts_DEPENDENCIES) $(EXTRA_eos_base_ts_DEPENDENCIES) 
	@rm -f eos_base_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_base_ts_OBJECTS) $(eos_base_ts_LDADD) $(LIBS)

eos_crust_ts$(EXEEXT): $(eos_crust_ts_OBJECTS) $(eos_crust_ts_DEPENDENCIES) $(EXTRA_eos_crust_ts_DEPENDENCIES) 
	@rm -f eos_crust_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_crust_ts_OBJECTS) $(eos_crust_ts_LDADD) $(LIBS)

eos_crust_virial_ts$(EXEEXT): $(eos_crust_virial_ts_OBJECTS) $(eos_crust_virial_ts_DEPENDENCIES) $(EXTRA_eos_crust_virial_ts_DEPENDENCIES) 
	@rm -f eos_crust_virial_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_crust_virial_ts_OBJECTS) $(eos_crust_virial_ts_LDADD) $(LIBS)

eos_had_apr_ts$(EXEEXT): $(eos_had_apr_ts_OBJECTS) $(eos_had_apr_ts_DEPENDENCIES) $(EXTRA_eos_had_apr_ts_DEPENDENCIES) 
	@rm -f eos_had_apr_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_apr_ts_OBJECTS) $(eos_had_apr_ts_LDADD) $(LIBS)

eos_had_base_ts$(EXEEXT): $(eos_had_base_ts_OBJECTS) $(eos_had_base_ts_DEPENDENCIES) $(EXTRA_eos_had_base_ts_DEPENDENCIES) 
	@rm -f eos_had_base_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_base_ts_OBJECTS) $(eos_had_base_ts_LDADD) $(LIBS)

eos_had_ddc_ts$(EXEEXT): $(eos_had_ddc_ts_OBJECTS) $(eos_had_ddc_ts_DEPENDENCIES) $(EXTRA_eos_had_ddc_ts_DEPENDENCIES) 
	@rm -f eos_had_ddc_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_ddc_ts_OBJECTS) $(eos_had_ddc_ts_LDADD) $(LIBS)

eos_had_gogny_ts$(EXEEXT): $(eos_had_gogny_ts_OBJECTS) $(eos_had_gogny_ts_DEPENDENCIES) $(EXTRA_eos_had_gogny_ts_DEPENDENCIES) 
	@rm -f eos_had_gogny_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_gogny_ts_OBJECTS) $(eos_had_gogny_ts_LDADD) $(LIBS)

eos_had_potential_ts$(EXEEXT): $(eos_had_potential_ts_OBJECTS) $(eos_had_potential_ts_DEPENDENCIES) $(EXTRA_eos_had_potential_ts_DEPENDENCIES) 
	@rm -f eos_had_potential_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_potential_ts_OBJECTS) $(eos_had_potential_ts_LDADD) $(LIBS)

eos_had_rmf_delta_ts$(EXEEXT): $(eos_had_rmf_delta_ts_OBJECTS) $(eos_had_rmf_delta_ts_DEPENDENCIES) $(EXTRA_eos_had_rmf_delta_ts_DEPENDENCIES) 
	@rm -f eos_had_rmf_delta_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_rmf_delta_ts_OBJECTS) $(eos_had_rmf_delta_ts_LDADD) $(LIBS)

eos_had_rmf_ts$(EXEEXT): $(eos_had_rmf_ts_OBJECTS) $(eos_had_rmf_ts_DEPENDENCIES) $(EXTRA_eos_had_rmf_ts_DEPENDENCIES) 
	@rm -f eos_had_rmf_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_rmf_ts_OBJECTS) $(eos_had_rmf_ts_LDADD) $(LIBS)

eos_had_schematic_ts$(EXEEXT): $(eos_had_schematic_ts_OBJECTS) $(eos_had_schematic_ts_DEPENDENCIES) $(EXTRA_eos_had_schematic_ts_DEPENDENCIES) 
	@rm -f eos_had_schematic_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_schematic_ts_OBJECTS) $(eos_had_schematic_ts_LDADD) $(LIBS)

eos_had_skyrme_ts$(EXEEXT): $(eos_had_skyrme_ts_OBJECTS) $(eos_had_skyrme_ts_DEPENDENCIES) $(EXTRA_eos_had_skyrme_ts_DEPENDENCIES) 
	@rm -f eos_had_skyrme_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_skyrme_ts_OBJECTS) $(eos_had_skyrme_ts_LDADD) $(LIBS)

eos_had_sym4_ts$(EXEEXT): $(eos_had_sym4_ts_OBJECTS) $(eos_had_sym4_ts_DEPENDENCIES) $(EXTRA_eos_had_sym4_ts_DEPENDENCIES) 
	@rm -f eos_had_sym4_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_sym4_ts_OBJECTS) $(eos_had_sym4_ts_LDADD) $(LIBS)

eos_had_tabulated_ts$(EXEEXT): $(eos_had_tabulated_ts_OBJECTS) $(eos_had_tabulated_ts_DEPENDENCIES) $(EXTRA_eos_had_tabulated_ts_DEPENDENCIES) 
	@rm -f eos_had_tabulated_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_had_tabulated_ts_OBJECTS) $(eos_had_tabulated_ts_LDADD) $(LIBS)

eos_nse_ts$(EXEEXT): $(eos_nse_ts_OBJECTS) $(eos_nse_ts_DEPENDENCIES) $(EXTRA_eos_nse_ts_DEPENDENCIES) 
	@rm -f eos_nse_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_nse_ts_OBJECTS) $(eos_nse_ts_LDADD) $(LIBS)

eos_quark_bag_ts$(EXEEXT): $(eos_quark_bag_ts_OBJECTS) $(eos_quark_bag_ts_DEPENDENCIES) $(EXTRA_eos_quark_bag_ts_DEPENDENCIES) 
	@rm -f eos_quark_bag_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_quark_bag_ts_OBJECTS) $(eos_quark_bag_ts_LDADD) $(LIBS)

eos_quark_cfl6_ts$(EXEEXT): $(eos_quark_cfl6_ts_OBJECTS) $(eos_quark_cfl6_ts_DEPENDENCIES) $(EXTRA_eos_quark_cfl6_ts_DEPENDENCIES) 
	@rm -f eos_quark_cfl6_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_quark_cfl6_ts_OBJECTS) $(eos_quark_cfl6_ts_LDADD) $(LIBS)

eos_quark_cfl_ts$(EXEEXT): $(eos_quark_cfl_ts_OBJECTS) $(eos_quark_cfl_ts_DEPENDENCIES) $(EXTRA_eos_quark_cfl_ts_DEPENDENCIES) 
	@rm -f eos_quark_cfl_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_quark_cfl_ts_OBJECTS) $(eos_quark_cfl_ts_LDADD) $(LIBS)

eos_quark_njl_ts$(EXEEXT): $(eos_quark_njl_ts_OBJECTS) $(eos_quark_njl_ts_DEPENDENCIES) $(EXTRA_eos_quark_njl_ts_DEPENDENCIES) 
	@rm -f eos_quark_njl_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_quark_njl_ts_OBJECTS) $(eos_quark_njl_ts_LDADD) $(LIBS)

eos_quark_ts$(EXEEXT): $(eos_quark_ts_OBJECTS) $(eos_quark_ts_DEPENDENCIES) $(EXTRA_eos_quark_ts_DEPENDENCIES) 
	@rm -f eos_quark_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_quark_ts_OBJECTS) $(eos_quark_ts_LDADD) $(LIBS)

eos_tov_ts$(EXEEXT): $(eos_tov_ts_OBJECTS) $(eos_tov_ts_DEPENDENCIES) $(EXTRA_eos_tov_ts_DEPENDENCIES) 
	@rm -f eos_tov_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eos_tov_ts_OBJECTS) $(eos_tov_ts_LDADD) $(LIBS)

nstar_cold_ts$(EXEEXT): $(nstar_cold_ts_OBJECTS) $(nstar_cold_ts_DEPENDENCIES) $(EXTRA_nstar_cold_ts_DEPENDENCIES) 
	@rm -f nstar_cold_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nstar_cold_ts_OBJECTS) $(nstar_cold_ts_LDADD) $(LIBS)

nucleus_rmf_ts$(EXEEXT): $(nucleus_rmf_ts_OBJECTS) $(nucleus_rmf_ts_DEPENDENCIES) $(EXTRA_nucleus_rmf_ts_DEPENDENCIES) 
	@rm -f nucleus_rmf_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nucleus_rmf_ts_OBJECTS) $(nucleus_rmf_ts_LDADD) $(LIBS)

nucmass_ldrop_shell_ts$(EXEEXT): $(nucmass_ldrop_shell_ts_OBJECTS) $(nucmass_ldrop_shell_ts_DEPENDENCIES) $(EXTRA_nucmass_ldrop_shell_ts_DEPENDENCIES) 
	@rm -f nucmass_ldrop_shell_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nucmass_ldrop_shell_ts_OBJECTS) $(nucmass_ldrop_shell_ts_LDADD) $(LIBS)

nucmass_ldrop_ts$(EXEEXT): $(nucmass_ldrop_ts_OBJECTS) $(nucmass_ldrop_ts_DEPENDENCIES) $(EXTRA_nucmass_ldrop_ts_DEPENDENCIES) 
	@rm -f nucmass_ldrop_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nucmass_ldrop_ts_OBJECTS) $(nucmass_ldrop_ts_LDADD) $(LIBS)

tov_solve_ts$(EXEEXT): $(tov_solve_ts_OBJECTS) $(tov_solve_ts_DEPENDENCIES) $(EXTRA_tov_solve_ts_DEPENDENCIES) 
	@rm -f tov_solve_ts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tov_solve_ts_OBJECTS) $(tov_solve_ts_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/eos_base.Plo
include ./$(DEPDIR)/eos_base_ts.Po
include ./$(DEPDIR)/eos_crust.Plo
include ./$(DEPDIR)/eos_crust_ts.Po
include ./$(DEPDIR)/eos_crust_virial_ts.Po
include ./$(DEPDIR)/eos_had_apr.Plo
include ./$(DEPDIR)/eos_had_apr_ts.Po
include ./$(DEPDIR)/eos_had_base.Plo
include ./$(DEPDIR)/eos_had_base_ts.Po
include ./$(DEPDIR)/eos_had_ddc.Plo
include ./$(DEPDIR)/eos_had_ddc_ts.Po
include ./$(DEPDIR)/eos_had_gogny_ts.Po
include ./$(DEPDIR)/eos_had_hlps.Plo
include ./$(DEPDIR)/eos_had_potential.Plo
include ./$(DEPDIR)/eos_had_potential_ts.Po
include ./$(DEPDIR)/eos_had_rmf.Plo
include ./$(DEPDIR)/eos_had_rmf_delta.Plo
include ./$(DEPDIR)/eos_had_rmf_delta_ts.Po
include ./$(DEPDIR)/eos_had_rmf_ts.Po
include ./$(DEPDIR)/eos_had_schematic.Plo
include ./$(DEPDIR)/eos_had_schematic_ts.Po
include ./$(DEPDIR)/eos_had_skyrme.Plo
include ./$(DEPDIR)/eos_had_skyrme_ts.Po
include ./$(DEPDIR)/eos_had_sym4.Plo
include ./$(DEPDIR)/eos_had_sym4_ts.Po
include ./$(DEPDIR)/eos_had_tabulated_ts.Po
include ./$(DEPDIR)/eos_nse.Plo
include ./$(DEPDIR)/eos_nse_ts.Po
include ./$(DEPDIR)/eos_quark.Plo
include ./$(DEPDIR)/eos_quark_bag.Plo
include ./$(DEPDIR)/eos_quark_bag_ts.Po
include ./$(DEPDIR)/eos_quark_cfl.Plo
include ./$(DEPDIR)/eos_quark_cfl6.Plo
include ./$(DEPDIR)/eos_quark_cfl6_ts.Po
include ./$(DEPDIR)/eos_quark_cfl_ts.Po
include ./$(DEPDIR)/eos_quark_njl.Plo
include ./$(DEPDIR)/eos_quark_njl_ts.Po
include ./$(DEPDIR)/eos_quark_ts.Po
include ./$(DEPDIR)/eos_sn.Plo
include ./$(DEPDIR)/eos_tov.Plo
include ./$(DEPDIR)/eos_tov_ts.Po
include ./$(DEPDIR)/hdf_eos_io.Plo
include ./$(DEPDIR)/nstar_cold.Plo
include ./$(DEPDIR)/nstar_cold_ts.Po
include ./$(DEPDIR)/nucleus_rmf.Plo
include ./$(DEPDIR)/nucleus_rmf_ts.Po
include ./$(DEPDIR)/nucmass_ldrop.Plo
include ./$(DEPDIR)/nucmass_ldrop_shell.Plo
include ./$(DEPDIR)/nucmass_ldrop_shell_ts.Po
include ./$(DEPDIR)/nucmass_ldrop_ts.Po
include ./$(DEPDIR)/tov_solve.Plo
include ./$(DEPDIR)/tov_solve_ts.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS


eos_had_apr.scr: eos_had_apr_ts$(EXEEXT) 
	./eos_had_apr_ts$(EXEEXT) > eos_had_apr.scr
eos_quark_bag.scr: eos_quark_bag_ts$(EXEEXT) 
	./eos_quark_bag_ts$(EXEEXT) > eos_quark_bag.scr
nstar_cold.scr: nstar_cold_ts$(EXEEXT) 
	./nstar_cold_ts$(EXEEXT) > nstar_cold.scr
nucmass_ldrop.scr: nucmass_ldrop_ts$(EXEEXT) 
	./nucmass_ldrop_ts$(EXEEXT) > nucmass_ldrop.scr
nucmass_ldrop_shell.scr: nucmass_ldrop_shell_ts$(EXEEXT) 
	./nucmass_ldrop_shell_ts$(EXEEXT) > nucmass_ldrop_shell.scr
eos_base.scr: eos_base_ts$(EXEEXT) 
	./eos_base_ts$(EXEEXT) > eos_base.scr
eos_had_potential.scr: eos_had_potential_ts$(EXEEXT) 
	./eos_had_potential_ts$(EXEEXT) > eos_had_potential.scr
eos_had_sym4.scr: eos_had_sym4_ts$(EXEEXT) 
	./eos_had_sym4_ts$(EXEEXT) > eos_had_sym4.scr
eos_had_base.scr: eos_had_base_ts$(EXEEXT) 
	./eos_had_base_ts$(EXEEXT) > eos_had_base.scr
eos_quark_njl.scr: eos_quark_njl_ts$(EXEEXT) 
	./eos_quark_njl_ts$(EXEEXT) > eos_quark_njl.scr
eos_quark.scr: eos_quark_ts$(EXEEXT) 
	./eos_quark_ts$(EXEEXT) > eos_quark.scr
eos_had_rmf.scr: eos_had_rmf_ts$(EXEEXT) 
	./eos_had_rmf_ts$(EXEEXT) > eos_had_rmf.scr
eos_had_schematic.scr: eos_had_schematic_ts$(EXEEXT) 
	./eos_had_schematic_ts$(EXEEXT) > eos_had_schematic.scr
eos_had_skyrme.scr: eos_had_skyrme_ts$(EXEEXT) 
	./eos_had_skyrme_ts$(EXEEXT) > eos_had_skyrme.scr
eos_tov.scr: eos_tov_ts$(EXEEXT) 
	./eos_tov_ts$(EXEEXT) > eos_tov.scr
tov_solve.scr: tov_solve_ts$(EXEEXT) 
	./tov_solve_ts$(EXEEXT) > tov_solve.scr
eos_quark_cfl6.scr: eos_quark_cfl6_ts$(EXEEXT) 
	./eos_quark_cfl6_ts$(EXEEXT) > eos_quark_cfl6.scr
eos_had_tabulated.scr: eos_had_tabulated_ts$(EXEEXT) 
	./eos_had_tabulated_ts$(EXEEXT) > eos_had_tabulated.scr
eos_had_rmf_delta.scr: eos_had_rmf_delta_ts$(EXEEXT) 
	./eos_had_rmf_delta_ts$(EXEEXT) > eos_had_rmf_delta.scr
eos_crust.scr: eos_crust_ts$(EXEEXT) 
	./eos_crust_ts$(EXEEXT) > eos_crust.scr
eos_had_ddc.scr: eos_had_ddc_ts$(EXEEXT) 
	./eos_had_ddc_ts$(EXEEXT) > eos_had_ddc.scr
eos_quark_cfl.scr: eos_quark_cfl_ts$(EXEEXT) 
	./eos_quark_cfl_ts$(EXEEXT) > eos_quark_cfl.scr
eos_nse.scr: eos_nse_ts$(EXEEXT) 
	./eos_nse_ts$(EXEEXT) > eos_nse.scr
# eos_sn.scr: eos_sn_ts$(EXEEXT) 
# 	./eos_sn_ts$(EXEEXT) > eos_sn.scr
nucleus_rmf.scr: nucleus_rmf_ts$(EXEEXT) 
	./nucleus_rmf_ts$(EXEEXT) > nucleus_rmf.scr
eos_had_gogny.scr: eos_had_gogny_ts$(EXEEXT) 
	./eos_had_gogny_ts$(EXEEXT) > eos_had_gogny.scr
eos_crust_virial.scr: eos_crust_virial_ts$(EXEEXT) 
	./eos_crust_virial_ts$(EXEEXT) > eos_crust_virial.scr

ls_test: ls_ls_test ls_skm_test ls_ska_test ls_sk1_test

ls_ls_test:
	eos_sn_ts ls $(HOME)/pkgs/ls_eos2/ls.dat

ls_skm_test:
	eos_sn_ts ls $(HOME)/pkgs/ls_eos2/skm.dat

ls_ska_test:
	eos_sn_ts ls $(HOME)/pkgs/ls_eos2/ska.dat

ls_sk1_test:
	eos_sn_ts ls $(HOME)/pkgs/ls_eos2/sk1.dat

stos_test: stos_eos1_test stos_eos2_test stos_eos3_test

stos_eos1_test:
	eos_sn_ts stos $(HOME)/pkgs/stos_eos/eos1

stos_eos2_test:
	eos_sn_ts stos $(HOME)/pkgs/stos_eos/eos2

stos_eos3_test:
	eos_sn_ts stos $(HOME)/pkgs/stos_eos/eos3

oo_test: oo_ls180_test oo_ls220_test oo_ls375_test

oo_ls180_test:
	eos_sn_ts oo \
	$(HOME)/pkgs/oo_eos/LS180_234r_136t_50y_analmu_20091212_SVNr26.h5 ls

oo_ls220_test:
	eos_sn_ts oo \
	$(HOME)/pkgs/oo_eos/LS220_234r_136t_50y_analmu_20091212_SVNr26.h5 ls

oo_ls375_test:
	eos_sn_ts oo \
	$(HOME)/pkgs/oo_eos/LS375_234r_136t_50y_analmu_20091212_SVNr26.h5 ls

oo_stos_test:
	eos_sn_ts oo \
	$(HOME)/pkgs/oo_eos/HShenEOS_rho220_temp180_ye65_version1.1_20120817.h5 \
	stos

oo_stos_hyp_test:
	eos_sn_ts oo \
	$(HOME)/pkgs/oo_eos/HShen_HyperonEOS_rho220_temp180_ye65_version1.1_20131007.h5 \
	stos

x:
	eos_sn_ts hfsl \
		$(HOME)/pkgs/hfsl_eos/dd2_frdm_eos_shen98format_v1.02.tab \
		 >> gen_sn_test.scr
	eos_sn_ts hfsl \
		$(HOME)/pkgs/hfsl_eos/fsg_roca_eos_shen98format_v1.0.tab \
		 >> gen_sn_test.scr
	eos_sn_ts hfsl \
		$(HOME)/pkgs/hfsl_eos/nl3_lala_eos_shen98format_v1.0.tab \
		 >> gen_sn_test.scr

emacs-clean: 
	-rm *~

qbkup:
	cp *.cpp *.h Makefile.am bkup

# ------------------------------------------------------------
# Testing
# ------------------------------------------------------------

o2scl-test: $(TEST_VAR)
	echo $(TEST_VAR) > testlist
	../internal/tsumm$(EXEEXT)

o2scl-test-rec: $(TEST_VAR)
	echo "src/eos" $(TEST_VAR) >> ../../testlist

test-clean: 
	rm -f *_ts.o *_ts *.scr

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
